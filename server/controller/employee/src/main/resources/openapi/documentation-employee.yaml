openapi: 3.0.0
info:
  title: Vientos del Sur Employee API
  version: 1.0.0
  description: API for managing employees
paths:
  /employee:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseDto_List<? extends Get>"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "object"
  /employee/active/{userId}:
    get:
      description: ""
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User ID is required"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /user/profile-picture/{id}:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid id"
        "200":
          description: "OK"
          content:
            image/jpeg:
              schema:
                type: "string"
                format: "byte"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No image found in request"
                Example#2:
                  value: "Invalid id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Profile picture updated successfully"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /user/{id}:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseDto_Get"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
components:
  schemas:
    Get:
      type: "object"
      properties: { }
    BaseResponseDto:
      type: "object"
      properties:
        message:
          type: "string"
        timestamp:
          type: "string"
          format: "date-time"
      required:
        - "message"
        - "timestamp"
    BaseResponseDto_List<? extends Get>:
      type: "object"
      properties:
        message:
          type: "string"
        timestamp:
          type: "string"
          format: "date-time"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Get"
    Create:
      type: "object"
      properties: { }
    BaseResponseDto_Get:
      type: "object"
      properties:
        message:
          type: "string"
        timestamp:
          type: "string"
          format: "date-time"
        data:
          $ref: "#/components/schemas/Get"